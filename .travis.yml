env:
  global:
  - REPO_DIR=PaddleHelix
  - BUILD_COMMIT=main
  - BUILD_DEPENDS="cmake"
  # - TEST_DEPENDS="numpy Cython opencv-python==4.2.0.32 paddlepaddle==1.7.2 networkx rarfile==3.0"
  - PLAT=x86_64
  - UNICODE_WIDTH=32
  - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
  - TWINE_USERNAME=rickhe
  - secure: hqvHGDfbr/DQEf6DSoBzw70sSDhkk6/P5PD/dq/FucFeUu77a1Mf6EEPK4nxDIxlf+ksQ609BkowHijdr9c1aC0JvNTEsP4VVBEB0BEk2q16g96OF/SGmR6yp6hUua2MChS+L6bMLBdM6xkTvp3bEXEBg72KNgchaae3UH8N1MhOvOWjkHvg/Lr/jYQspZdL6+zju6m1lxNQhKELkHX7Q61MkUKfdgTIEN55SePOe/Ip0V5J+exwx7Ko3KPBCzVPZIWB7CSGbAJ4RCRikgcRR+MDBKdidtZ1BZY6jimpLEX2E8Zb1ZN2pbZ9j6gPxWlEgW6lj/ELkcoRuC1DZH7lt3dQydGjqXNql3c1QkuV5YIJJowVVB8x/JVUpr/+6lamMBgx9bbPUtXkflEoJXctSiQnZNhg7dKqRAqYw8KV5y0fI9uZbNbfGfu6qcU48VxNLMprejAkFGiLhuAF5eACkB+oLiYi8CzPaM46S8SF9t/WHnuits9/zuAt0VI+IG1YC3nElOFsR3H5WOXSt9QTBZjR9U7QPpsfEUiauGCo3liYHyAkVYVCNO+RD+43LWJjYIbd/TINGXOKgbus/ZSyWovx+qVqW31U2HRMBuLL/nkVJsmgaN6unXsEoIFOlwJxxrnS6h7thgXa5h+VKO+JkV67aNh3uLbVXhCYJobmwMU=
language: generic
services: docker
dist:  xenial 
# sudo: required
# addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - gcc-6
#          - g++-6
#          - cmake
matrix:
  exclude:
  - python: 3.5
  include:
  # - os: linux
  #   env:
  #   - MB_PYTHON_VERSION=2.7
  # - os: linux
  #   env:
  #   - MB_PYTHON_VERSION=3.5
  # - os: linux
  #   env:
  #   - MB_PYTHON_VERSION=3.5
  #   - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.7
  # - os: osx
  #   language: generic
  #   env:
  #   - MB_PYTHON_VERSION=2.7
  # - os: osx
  #   language: generic
  #   env:
  #   - MB_PYTHON_VERSION=3.5
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.6
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.7
    - MB_PYTHON_OSX_VER=10.9
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=pypy-5.7
before_install:
- source multibuild/common_utils.sh
- source multibuild/travis_steps.sh
# #Link gcc-6 and g++-6 to their standard commands
# - sudo ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
# - sudo ln -s /usr/bin/g++-6 /usr/local/bin/g++
# # Export CC and CXX to tell cmake which compiler to use
# - export CC=/usr/bin/gcc-6
# - export CXX=/usr/bin/g++-6
# # Check versions of gcc, g++ and cmake
# - gcc -v && g++ -v && cmake --version
# # Run your build commands next
- before_install
install:
#- echo $REPO_DIR $BUILD_COMMIT
#- clean_code $REPO_DIR $BUILD_COMMIT
# - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
# - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
# - travis_retry wget --no-check-certificate https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz
# - echo "f3546812c11ce7f5d64dc132a566b749 *cmake-3.3.2-Linux-x86_64.tar.gz" > cmake_md5.txt
# - tar -xvf cmake-3.3.2-Linux-x86_64.tar.gz > /dev/null
# - mv cmake-3.3.2-Linux-x86_64 cmake-install
# - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
# - cd ${TRAVIS_BUILD_DIR}
- cmake --version
- brew install ninja
- build_wheel $REPO_DIR $PLAT
script:
- install_run $PLAT
after_success:
- echo "success"
- pip install twine
- twine upload ${TRAVIS_BUILD_DIR}/wheelhouse/* --skip-existing -p $TWINE_PASSWD -u
 $TWINE_USERNAME --repository-url https://test.pypi.org/legacy/

#- twine upload ${TRAVIS_BUILD_DIR}/wheelhouse/* --skip-existing -p $TWINE_PASSWD -u
#  $TWINE_USERNAME 


