env:
  global:
  - REPO_DIR=pahelix_linear
  - BUILD_COMMIT=main
  - BUILD_DEPENDS="cmake"
  # - TEST_DEPENDS="numpy Cython opencv-python==4.2.0.32 paddlepaddle==1.7.2 networkx rarfile==3.0"
  - PLAT=x86_64
  - UNICODE_WIDTH=32
  - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
  - TWINE_USERNAME=rickhe
  - secure: RWS4SIcvhUcWR5yVxPz844izP2z8D8InYXExR1bYmX3k5GM5vAc7G/Bb3JMk8G64NIstLq7DP65mvagCEhP7th7/51VnWwzlmytZct4of6gl1xArzNAfvaot8glT070brJwDgWmINDexR3RFhzGPdj7Rh9WwDgF2tgoQN45MwlFkRw5VUrwe/cE1p0hrsHRj5IneC7Dgx04L7o6lPnnqBRMOh/9UjOcKGbZh2QrC+GlKDt9DWJTMbjlIfLT/MdTV9PD3tQtyZSBAl519V/mTHqDkd19S3RqRkfZKzrpesjc05hBljCnjr0lZH+Hp5SCj5In0LJDGrvFFU7dv88RLjriYeconmXWVyHaf7ibj/inQBuj05uNPTEVkU3poj/hx5Ekp3EEzg2cR0NMvued2ccMr+g4cQ+5T/zdburJymooKPvRtgEiOE5kWJTiYN6TWEcvr2rpS24Nr0E/u1Uz9eZ2bcRpACYScr/ARgz/64QxWVHAzl6J9H+3ZtiIHRD/j1rnwy++U83SEzPMWeOOiAJH3R479yP7EBF5VzP9Idkkhkloz+x2wT4hrr/JsrRFYVCD4gyUM2wVsdGkZvJLA6uRcwqTmBRoH24rD2OfLfR7YZg3tO7vlnM1fARRs1ljzF9L57zxh7kc2Kmbrd8a8OuAZXkcxywVC44UwztaFoaI=
language: generic
services: docker
dist:  xenial 
# sudo: required
# addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - gcc-6
#          - g++-6
#          - cmake
matrix:
  exclude:
  - python: 3.5
  include:
  # - os: linux
  #   env:
  #   - MB_PYTHON_VERSION=2.7
  # - os: linux
  #   env:
  #   - MB_PYTHON_VERSION=3.5
  # - os: linux
  #   env:
  #   - MB_PYTHON_VERSION=3.5
  #   - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.7
  # - os: osx
  #   language: generic
  #   env:
  #   - MB_PYTHON_VERSION=2.7
  # - os: osx
  #   language: generic
  #   env:
  #   - MB_PYTHON_VERSION=3.5
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.6
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.7
    - MB_PYTHON_OSX_VER=10.9
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=pypy-5.7
before_install:
- source multibuild/common_utils.sh
- source multibuild/travis_steps.sh
# #Link gcc-6 and g++-6 to their standard commands
# - sudo ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
# - sudo ln -s /usr/bin/g++-6 /usr/local/bin/g++
# # Export CC and CXX to tell cmake which compiler to use
# - export CC=/usr/bin/gcc-6
# - export CXX=/usr/bin/g++-6
# # Check versions of gcc, g++ and cmake
# - gcc -v && g++ -v && cmake --version
# # Run your build commands next
- before_install
install:
#- echo $REPO_DIR $BUILD_COMMIT
#- clean_code $REPO_DIR $BUILD_COMMIT
# - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
# - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
# - travis_retry wget --no-check-certificate https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz
# - echo "f3546812c11ce7f5d64dc132a566b749 *cmake-3.3.2-Linux-x86_64.tar.gz" > cmake_md5.txt
# - tar -xvf cmake-3.3.2-Linux-x86_64.tar.gz > /dev/null
# - mv cmake-3.3.2-Linux-x86_64 cmake-install
# - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
# - cd ${TRAVIS_BUILD_DIR}
- cmake --version
- brew install ninja
- build_wheel $REPO_DIR $PLAT
script:
- install_run $PLAT
after_success:
- echo "success"
- pip install twine
- twine upload ${TRAVIS_BUILD_DIR}/wheelhouse/* --skip-existing -p $TWINE_PASSWD -u
 $TWINE_USERNAME --repository-url https://test.pypi.org/legacy/

#- twine upload ${TRAVIS_BUILD_DIR}/wheelhouse/* --skip-existing -p $TWINE_PASSWD -u
#  $TWINE_USERNAME 


